name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        ports:
          - '3306:3306'
        env:
          MYSQL_DATABASE: testing
          MYSQL_USER: testing
          MYSQL_PASSWORD: testing
          MYSQL_ROOT_PASSWORD: testing
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=30s
          --health-retries=5
      redis:
        image: redis
        ports:
          - '6379:6379'
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP Action
        uses: shivammathur/setup-php@v2
        with:
          php-version: latest
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist
        
      - name: Test and coverage report
        run: composer test

      - name: Upload coverage results to Coveralls
        uses: nick-invision/retry@v3
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: 'true'
          COVERALLS_FLAG_NAME: "php:latest"
        with:
          timeout_minutes: 1
          max_attempts: 3
          command: |
            composer global require php-coveralls/php-coveralls
            php-coveralls -v

  coverage:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Aggregate coverage report
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
